#PlanetScaleDB Dev branch
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

#local mysql
#spring.datasource.url=jdbc:mysql://localhost:3306/takenotecopy?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#spring.datasource.username=root
#spring.datasource.password=password

#local mysql with docker
#Docker
#spring.datasource.url=jdbc:mysql://host.docker.internal:3306/takenotecopy?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false

#Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# value can be 'create', 'create-drop' or 'update'
spring.jpa.hibernate.ddl-auto=update

# show queries on console
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

#to log sql statements
#logging.level.org.hibernate.sql=debug
#logging.level.org.hibernate.type=trace

spring.data.rest.base-path=/api/

#spring.mvc.format.date=yyyy-mm-dd

#customizing spring security login
#spring.security.user.name=user
#spring.security.user.password=password
#spring.security.user.roles=USER

spring.main.allow-circular-references=true

#logging to a file
#logging.level.root=[INFO][DEBUG][TRACE] <- pick an option here; usually INFO would suffice. and for writing log to a file, use:
#logging.level.root=info
#logging.file.name='FileName.log' (give a file name with .log extension, without single quotes);
logging.file.name=logging_file.log;